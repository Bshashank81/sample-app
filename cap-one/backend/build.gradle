plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.2'
	id 'io.spring.dependency-management' version '1.1.4'
	id "org.sonarqube" version "4.4.1.3373"
}

group = 'com.capone'
version = '0.0.1-SNAPSHOT'

def props = new Properties()
file("dev.env").withInputStream { props.load(it) }

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.flywaydb:flyway-core'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	implementation "org.springframework.boot:spring-boot-starter-jdbc"
}

sonar {
	properties {
		property "sonar.projectKey", props.getProperty("SONAR_PROJECT_KEY")
		property "sonar.organization", props.getProperty("SONAR_ORGANIZATION")
		property "sonar.host.url", props.getProperty("SONAR_HOST_URL")
		property "sonar.login", props.getProperty("SONAR_TOKEN")
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
